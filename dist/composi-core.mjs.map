{"version":3,"file":"composi-core.mjs.map","sources":["../src/constants.js","../src/vnode.js","../src/h.js","../src/vdom.js","../src/render.js","../src/runtime.js","../src/union.js","../src/effects.js","../src/fragment.js"],"sourcesContent":["/**\n * Used to determine if a vnode should be recycled.\n * @type {number}\n */\nexport const RECYCLED_NODE = 0\n\n/**\n * Used in a vnode to indicate that it is a DOM node.\n * @type {number}\n */\nexport const ELEMENT_NODE = 1\n\n/**\n * Used in a vnode to indicate that it is a text node.\n * @type {number}\n */\nexport const TEXT_NODE = 3\n\n/**\n * Namespace for SVG elements with `xlink:href` attributes.\n * @type {string}\n */\nexport const XLINK_NS = 'http://www.w3.org/1999/xlink'\n\n/**\n * Namespace for SVG elements.\n * @type {string}\n */\nexport const SVG_NS = 'http://www.w3.org/2000/svg'\n\n/**\n * An empty object. Used as placeholder for `props` in VNode.\n * @type {{}} EMPTY_OBJECT\n */\nexport const EMPTY_OBJECT = {}\n\n/**\n * An empty array. Used for access to array methods.\n * @type {any[]} EMPTY_ARRAY\n */\nexport const EMPTY_ARRAY = []\n\n/**\n * An array to store lifecycle hooks.\n * @type {any[]} LIFECYCLE\n */\nexport const LIFECYCLE = []\n","import { EMPTY_OBJECT, EMPTY_ARRAY, TEXT_NODE } from './constants'\n\n/**\n * @typedef {Object<string, any> | {}} Props\n * @prop {Children} Props.children\n * @prop {(Element) => void} [Props.onmount]\n * @prop {(Element, Object, Object) => void} [Props.onupdate]\n * @prop {(Element, (State) => void) => void} [Props.onunmount]\n */\n/**\n * @typedef {VNode[]} Children\n */\n/**\n * @typedef {string | number | Function} Type\n * @typedef {number | string | null} Key\n * @typedef {Object | {}} VNode\n * @prop {Type} type\n * @prop {Props} props\n * @prop {Children} children\n * @prop {Element} node\n * @prop {Key} [key]\n * @prop {number} flag\n */\n/**\n * Create a virtual node with the provided properties.\n * @param {string | Function} type\n * @param {Props} props\n * @param {Children} children\n * @param {Element} node\n * @param {string | number | null} key\n * @param {number} [flag]\n * @return {VNode} VNode\n */\nexport function createVNode(\n  type,\n  props,\n  children,\n  node,\n  key = null,\n  flag = null\n) {\n  return {\n    type,\n    props,\n    children,\n    node,\n    flag,\n    key\n  }\n}\n\n/**\n * Create a virtual text node.\n * @param {string} value\n * @param {Element} [node]\n * @return {VNode} VNode\n */\nexport function createTextVNode(value, node) {\n  return createVNode(value, EMPTY_OBJECT, EMPTY_ARRAY, node, null, TEXT_NODE)\n}\n","import { createVNode, createTextVNode } from './vnode'\n\n/**\n * Creates a virtual node representing an element node or text node to be created. This function must be imported into any file that contains JSX. Babel uses this function to convert JSX into JavaScript.\n * @typedef {import('./vnode').VNode} VNode\n * @param {string | Function} type\n * @param {Object.<string, any>} [props]\n * @return {VNode}\n */\nexport function h(type, props, ...children) {\n  props = props || {}\n  let node\n  const tempBox = []\n  const childNodes = []\n  let length = children.length\n  const key = props.key\n\n  while (length-- > 0) tempBox.push(children[length])\n\n  if (props.children) {\n    if (tempBox.length <= 0) {\n      tempBox.push(props.children)\n    }\n    delete props.children\n  }\n\n  while (tempBox.length > 0) {\n    if (Array.isArray((node = tempBox.pop()))) {\n      let length = node.length\n      while (length-- > 0) {\n        tempBox.push(node[length])\n      }\n    } else if (node === false || node === true || node == null) {\n    } else {\n      childNodes.push(typeof node === 'object' ? node : createTextVNode(node))\n    }\n  }\n\n  if (typeof type === 'function') {\n    return type(props, childNodes)\n  } else {\n    return createVNode(type, props, childNodes, null, key)\n  }\n}\n","import { RECYCLED_NODE, TEXT_NODE, EMPTY_OBJECT, LIFECYCLE } from './constants'\nimport { createTextVNode, createVNode } from './vnode'\n\n/**\n * Determin whether the old and new props are identical.\n * @typedef {import('./vnode').Props} Props\n * @param {Props} oldVProps\n * @param {Props} newVProps\n */\nfunction areNotEqual(oldVProps, newVProps) {\n  return JSON.stringify(oldVProps) !== JSON.stringify(newVProps)\n}\n\n/**\n * @typedef {import('./vnode').VNode} VNode\n */\n/**\n * Return the combination of two objects of props.\n * @param {Object<string, any>} a\n * @param {Object<string, any>} b\n */\nexport function mergeObjects(a, b) {\n  return Object.assign({}, a, b)\n}\n\n/**\n * Handle inline events.\n * @param {Event} event\n */\nfunction listener(event) {\n  this.handlers[event.type](event)\n}\n/**\n * Update the properties and attributes of a VNode based on new data.\n * @param {Element} node\n * @param {string} prop\n * @param {any} oldValue\n * @param {any} newValue\n * @param {boolean} isSVG\n * @return {void} undefined\n */\nfunction patchProperty(node, prop, oldValue, newValue, isSVG) {\n  if (prop === 'key') {\n  } else if (prop === 'style' && typeof newValue === 'object') {\n    for (let i in mergeObjects(oldValue, newValue)) {\n      const style = newValue == null || newValue[i] == null ? '' : newValue[i]\n      if (i[0] === '-') {\n        node[prop].setProperty(i, style)\n      } else {\n        node[prop][i] = style\n      }\n    }\n  } else if (prop[0] === 'o' && prop[1] === 'n') {\n    if (\n      !((node['handlers'] || (node['handlers'] = {}))[\n        (prop = prop.slice(2).toLowerCase())\n      ] = newValue)\n    ) {\n      node.removeEventListener(prop, listener)\n    } else if (!oldValue) {\n      node.addEventListener(prop, listener)\n    }\n  } else if (\n    prop !== 'list' &&\n    prop !== 'form' &&\n    prop !== 'type' &&\n    prop !== 'draggable' &&\n    prop !== 'spellcheck' &&\n    prop in node &&\n    !isSVG\n  ) {\n    node[prop] = newValue == null ? '' : newValue\n  } else if (newValue == null || newValue === false) {\n    node.removeAttribute(prop)\n  } else {\n    node.setAttribute(prop, newValue)\n  }\n}\n\n/**\n * Create node from vnode.\n * @param {VNode} vnode\n * @param {Function[]} LIFECYCLE\n * @param {boolean} isSVG\n */\nfunction createNode(vnode, LIFECYCLE, isSVG) {\n  const type = /** @type{string} */ (vnode.type)\n  const node =\n    vnode.flag === TEXT_NODE\n      ? document.createTextNode(type)\n      : (isSVG = isSVG || type === 'svg') // eslint-disable-line no-cond-assign\n      ? document.createElementNS('http://www.w3.org/2000/svg', type)\n      : document.createElement(type)\n  const props = vnode.props\n  if (props['onmount']) {\n    LIFECYCLE.push(function() {\n      props['onmount'](node)\n    })\n  }\n\n  for (let k in props) {\n    patchProperty(/** @type{Element} */ (node), k, null, props[k], isSVG)\n  }\n\n  for (let i = 0, len = vnode.children.length; i < len; i++) {\n    node.appendChild(createNode(vnode.children[i], LIFECYCLE, isSVG))\n  }\n\n  return (vnode.node = /** @type{Element} */ (node))\n}\n\n/**\n * Get key of vnode element.\n * @param {VNode} vnode\n * @returns {null | string | number} null | string | number\n */\nfunction getKey(vnode) {\n  return vnode == null ? null : vnode.key\n}\n\n/**\n * Remove child node.\n * @param {VNode} vnode\n * @returns {Node} node\n */\nfunction removeChildren(vnode) {\n  for (let i = 0, length = vnode.children.length; i < length; i++) {\n    removeChildren(vnode.children[i])\n  }\n\n  const cb = vnode.props['ondestroy']\n  if (cb != null) {\n    cb(vnode.node)\n  }\n\n  return vnode.node\n}\n\n/**\n * Remove element from DOM.\n * @param {Node} parent\n * @param {VNode} vnode\n * @returns {void} undefined\n */\nfunction removeElement(parent, vnode) {\n  const remove = function() {\n    parent.removeChild(removeChildren(vnode))\n  }\n\n  const cb = vnode.props && vnode.props['onunmount']\n  if (cb != null) {\n    cb(vnode.node, remove)\n  } else {\n    remove()\n  }\n}\n\n/**\n * Patch element in DOM according to new props.\n * @param {Node} parent\n * @param {Node} node\n * @param {any} oldVNode\n * @param {any} newVNode\n * @param {boolean} [isSVG]\n */\nfunction patchNode(parent, node, oldVNode, newVNode, isSVG) {\n  if (oldVNode === newVNode) {\n  } else if (\n    oldVNode != null &&\n    oldVNode.flag === TEXT_NODE &&\n    newVNode.flag === TEXT_NODE\n  ) {\n    if (oldVNode.type !== newVNode.type) {\n      node.nodeValue = newVNode.type\n    }\n  } else if (oldVNode == null || oldVNode.type !== newVNode.type) {\n    node = parent.insertBefore(createNode(newVNode, LIFECYCLE, isSVG), node)\n    if (oldVNode != null) {\n      removeElement(parent, oldVNode)\n    }\n  } else {\n    let tmpVKid\n    let oldVKid\n\n    let oldKey\n    let newKey\n\n    const oldVProps = oldVNode.props\n    const newVProps = newVNode.props\n\n    const oldVKids = oldVNode.children\n    const newVKids = newVNode.children\n\n    let oldHead = 0\n    let newHead = 0\n    let oldTail = oldVKids.length - 1\n    let newTail = newVKids.length - 1\n\n    isSVG = isSVG || newVNode.type === 'svg'\n\n    for (let i in mergeObjects(oldVProps, newVProps)) {\n      if (\n        (i === 'value' || i === 'selected' || i === 'checked'\n          ? node[i]\n          : oldVProps[i]) !== newVProps[i]\n      ) {\n        patchProperty(\n          /** @type{Element} */ (node),\n          i,\n          oldVProps[i],\n          newVProps[i],\n          isSVG\n        )\n        const cb = newVProps.onupdate\n        if (cb != null) {\n          if (areNotEqual(oldVProps, newVProps)) {\n            LIFECYCLE.push(function() {\n              cb(node, oldVProps, newVProps)\n            })\n          }\n        }\n      }\n    }\n\n    while (newHead <= newTail && oldHead <= oldTail) {\n      if (\n        (oldKey = getKey(oldVKids[oldHead])) == null ||\n        oldKey !== getKey(newVKids[newHead])\n      ) {\n        break\n      }\n\n      patchNode(\n        node,\n        oldVKids[oldHead].node,\n        oldVKids[oldHead++],\n        newVKids[newHead++],\n        isSVG\n      )\n    }\n\n    while (newHead <= newTail && oldHead <= oldTail) {\n      if (\n        (oldKey = getKey(oldVKids[oldTail])) == null ||\n        oldKey !== getKey(newVKids[newTail])\n      ) {\n        break\n      }\n\n      patchNode(\n        node,\n        oldVKids[oldTail].node,\n        oldVKids[oldTail--],\n        newVKids[newTail--],\n        isSVG\n      )\n    }\n\n    if (oldHead > oldTail) {\n      while (newHead <= newTail) {\n        node.insertBefore(\n          createNode(newVKids[newHead++], LIFECYCLE, isSVG),\n          (oldVKid = oldVKids[oldHead]) && oldVKid.node\n        )\n      }\n    } else if (newHead > newTail) {\n      while (oldHead <= oldTail) {\n        removeElement(node, oldVKids[oldHead++])\n      }\n    } else {\n      let i, keyed, newKeyed\n      for (i = oldHead, keyed = {}, newKeyed = {}; i <= oldTail; i++) {\n        if ((oldKey = oldVKids[i].key) != null) {\n          keyed[oldKey] = oldVKids[i]\n        }\n      }\n\n      while (newHead <= newTail) {\n        oldKey = getKey((oldVKid = oldVKids[oldHead]))\n        newKey = getKey(newVKids[newHead])\n\n        if (\n          newKeyed[oldKey] ||\n          (newKey != null && newKey === getKey(oldVKids[oldHead + 1]))\n        ) {\n          if (oldKey == null) {\n            removeElement(node, oldVKid)\n          }\n          oldHead++\n          continue\n        }\n\n        if (newKey == null || oldVNode.flag === RECYCLED_NODE) {\n          if (oldKey == null) {\n            patchNode(\n              node,\n              oldVKid && oldVKid.node,\n              oldVKid,\n              newVKids[newHead],\n              isSVG\n            )\n            newHead++\n          }\n          oldHead++\n        } else {\n          if (oldKey === newKey) {\n            patchNode(node, oldVKid.node, oldVKid, newVKids[newHead], isSVG)\n            newKeyed[newKey] = true\n            oldHead++\n          } else {\n            if ((tmpVKid = keyed[newKey]) != null) {\n              patchNode(\n                node,\n                node.insertBefore(tmpVKid.node, oldVKid && oldVKid.node),\n                tmpVKid,\n                newVKids[newHead],\n                isSVG\n              )\n              newKeyed[newKey] = true\n            } else {\n              patchNode(\n                node,\n                oldVKid && oldVKid.node,\n                null,\n                newVKids[newHead],\n                isSVG\n              )\n            }\n          }\n          newHead++\n        }\n      }\n\n      while (oldHead <= oldTail) {\n        if (getKey((oldVKid = oldVKids[oldHead++])) == null) {\n          removeElement(node, oldVKid)\n        }\n      }\n\n      for (let i in keyed) {\n        if (newKeyed[i] == null) {\n          removeElement(node, keyed[i])\n        }\n      }\n    }\n  }\n\n  return (newVNode.node = node)\n}\n\nfunction recycleNode(node) {\n  return node.nodeType === TEXT_NODE\n    ? createTextVNode(node.nodeValue, node)\n    : createVNode(\n        node.nodeName.toLowerCase(),\n        EMPTY_OBJECT,\n        Array.prototype.map.call(node.childNodes, recycleNode),\n        node,\n        null,\n        RECYCLED_NODE\n      )\n}\n\n/**\n * Patch DOM with virtual node from functional component.\n * @param {Node} node\n * @param {VNode} vdom\n */\nexport function patch(node, vdom) {\n  if (!node['vdom']) {\n    if (vdom.props['onmount']) {\n      LIFECYCLE.push(function() {\n        vdom.props['onmount'](node)\n      })\n    }\n  }\n  const vnode = (patchNode(\n    node.parentNode,\n    node,\n    node['vdom'] || recycleNode(node),\n    vdom\n  )['vdom'] = vdom)\n  while (LIFECYCLE.length > 0) LIFECYCLE.pop()()\n  return vnode\n}\n","import { patch } from './vdom'\n\n/**\n * Render a functional component. The first argument is the component to render. This can be either a JSX tag or an `h` function. The second argument is the element to hydrate or update. During the first render, the target element is hydrated with the component provided. Further updates patch the existing element based on the virtual DOM.\n * @example\n *\n * ```\n * // Render Title tag into section:\n * render(<Title message='Hello World!'/>, 'section')\n * // Update the title component 5 seconds later:\n * setTimeout(() => {\n *   render(<Title message='Hello Everyone!'/>, 'section')\n * }, 5000)\n * ```\n * @typedef {import('./vnode').VNode} VNode\n * @param {VNode} vnode\n * @param {Element | string} target\n * @return {void} undefined\n */\nexport function render(vnode, target) {\n  if (Array.isArray(vnode)) {\n    throw 'Cannot insert Fragment tag directly into DOM.'\n  }\n  let oldTarget = ''\n  if (typeof target === 'string') {\n    oldTarget = target\n    target = document.querySelector(target)\n  }\n  if (!target) {\n    let msg = ''\n    if (oldTarget) msg = ` The selector you provided was: \"${oldTarget}\"`\n    console.error(\n      `@composi/core Error: The second parameter for render function was invalid. Check the selector you provided and make sure that it exists in the DOM before trying to render. ${msg}`\n    )\n  }\n  patch(target, vnode)\n}\n","/**\n * @typedef {Object<string, any>} Message\n * @prop {string} type\n * @prop {any} [data]\n * @typedef {(msg?: Message) => Message} Send\n */\n/**\n * @typedef {any} State Simple or complex types for application state.\n */\n/**\n * @typedef {State | void} InitResult Return result of program init method.\n */\n/**\n * @typedef {Object<string, any>} Program A program to run.\n * @prop {() => InitResult} init Method to set up initial state.\n * @prop {(state: State, send?: Send) => void} view Method to present the current application state.\n * @prop {(state: State, msg?: Message, send?: Send) => any} update Method to capture messages sent from view or subscriptions. According to the message, an action will transform application state and pass it the the program view method.\n * @prop {(getState: () => State, send: Send) => void} [subscriptions] Method to run effects when the program starts. These run independently from the rest of the program.\n * @prop {(getState: () => State, send: Send) => void} [subs] Shortcut for subscriptions.\n * @prop {(state: State) => void} [done] Method to do clean up when shutting down a program.\n * @prop {Send} [send] A static send function for dispatching message to a program. Used with routers and in composition.\n */\n/**\n * The @composi/runtime.\n * @example\n *\n * ```\n * // Create a runtime program\n * const program = {\n *   // Define state:\n *   init() {\n *     return [{count: 0}]\n *   },\n *   // Define view to render.\n *   // Notice event to send message 'incr'.\n *   view(state, send) {\n *      return render(<div onclick={send('incr')}>The count is: {state.count}</div>, document.body)\n *   },\n *   // Define action to update state:\n *   update(state, msg) {\n *     if (msg === 'incr') {\n *        return [state.count++]\n *     }\n *   }\n * }\n * // Run the program:\n * run(program)\n * ```\n * @param {Program} program A program to run with five methods: `init`, `view`, `update`, `subscriptions` and `done`.\n * @return {() => void} Function to terminate runtime.\n */\nexport function run(program) {\n  let init = program.init\n  const view = program.view\n  const update = program.update\n  const subscriptions = program.subscriptions || program.subs\n  const done = program.done\n  let state\n  let isRunning = true\n  let isFirstRun = true\n  const getState = () => state\n\n  /**\n   * Send a message.\n   * @param {Message} message\n   *\n   */\n  function send(message) {\n    if (isRunning) {\n      return updateView(update(state, message, send))\n    }\n  }\n\n  /**\n   * Expose send as static function on program object.\n   * This is to let you send messages to the program\n   * from other contexts, such as in a @composi/router action.\n   */\n  program['send'] = send\n\n  /**\n   * Handle changes to state and executing effects.\n   * @param {any} update\n   * @return {void} undefined\n   */\n  function updateView(update) {\n    if (update) {\n      state = update\n    } else if (init) {\n      state = init()\n    }\n    if (subscriptions && isFirstRun) {\n      if (typeof subscriptions === 'function') subscriptions(getState, send)\n      isFirstRun = false\n    }\n    view(state, send)\n  }\n  updateView(state)\n\n  /**\n   * Function to end runtime.\n   * @return {void} undefined\n   */\n  return () => {\n    if (isRunning) {\n      isRunning = false\n      if (done) {\n        done(state)\n      }\n    }\n  }\n}\n","const hasOwnProperty = Object.prototype.hasOwnProperty\n\n/**\n * Create a union of string tags.\n * @param {string[]} types\n * @returns {Object<string, any>} Object\n */\nfunction createUnion(types) {\n  const variants = Object.create(null)\n\n  function match(tag, handlers) {\n    if (!tag.type) {\n      console.error(\n        \"The message you provided was not valid. Messages have the format: {type: 'whatever', data: 'something'}\"\n      )\n      console.error('The tag you provided was:')\n      console.dir(tag)\n      return\n    }\n    return ((tag, context) => {\n      const type = tag.type\n      const match = hasOwnProperty.call(handlers, type) && handlers[type]\n      return match(tag.data, context)\n    })(tag)\n  }\n\n  let idx = 0\n  while (idx < types.length) {\n    const type = types[idx]\n    variants[type] = data => ({ type, data })\n    idx++\n  }\n\n  return { variants, match }\n}\n\n/**\n * @typedef {Object} MessageUnion\n */\n\n/**\n * Create a union of types for matching up with functions. This is used to define actions for the `update` method of a runtime program.\n * @param {...string} types\n * @returns {MessageUnion} MessagesUnion\n */\nexport function union(...types) {\n  const { variants, match } = createUnion(types)\n  variants.match = match\n  return variants\n}\n","/**\n * @typedef {import('./runtime').Send} Send\n * @typedef {import('./runtime').Message} Message\n * @typedef {Object} State\n * @typedef {() => State} GetState\n * @typedef {(getState: GetState, send: Send) => any} Effect\n */\n/**\n * Function to batch effects together.\n * @param {...Effect} effects\n * @return {(getState: GetState, send: Send) => any} Function\n */\nexport const batchEffects = (...effects) => (getState, send) =>\n  effects.map(effect => effect && effect(getState, send))\n","/**\n * Returns a group of sibling elements for inclusion in another JSX tag.\n * @typedef {import('./vnode').VNode} VNode\n * @typedef {import('./vnode').Props} Props\n * @typedef {import('./vnode').Children} Children\n * @param {Props} props\n * @return {Children} children\n */\n/**\n * A tag to enable returning sibling elements. This is useful for returning list items to render in a list or table cells to render in a table row.\n * @example\n *\n * ```\n * <Fragment>\n *   <li>A</li>\n *   <li>B</li>\n *   <li>C</li>\n * </Fragment>\n ```\n * Or functionally:\n * ```\n * Fragment(null, [\n *   h('li', {}, 'A'),\n *   h('li', {}, 'B'),\n *   h('li', {}, 'C')\n * ])\n ```\n * @param {Object} [props] When using Fragment as a function, props is the first argument. Provide either null or {} as the value for props.\n * @param {Children} [children] The siblings to return with the Fragment. This will be an array of sibling elements.\n * @return {VNode[]} An array of virtual nodes.\n */\nexport const Fragment = (props, children) =>\n  Array.isArray(props) && !children ? props : children\n"],"names":["RECYCLED_NODE","TEXT_NODE","EMPTY_OBJECT","EMPTY_ARRAY","LIFECYCLE","createVNode","type","props","children","node","key","flag","createTextVNode","value","h","tempBox","childNodes","length","push","Array","isArray","pop","areNotEqual","oldVProps","newVProps","JSON","stringify","mergeObjects","a","b","Object","assign","listener","event","handlers","patchProperty","prop","oldValue","newValue","isSVG","i","style","setProperty","slice","toLowerCase","addEventListener","removeEventListener","removeAttribute","setAttribute","createNode","vnode","document","createTextNode","createElementNS","createElement","k","len","appendChild","getKey","removeChildren","cb","removeElement","parent","remove","removeChild","patchNode","oldVNode","newVNode","nodeValue","insertBefore","tmpVKid","oldVKid","oldKey","newKey","oldVKids","newVKids","oldHead","newHead","oldTail","newTail","onupdate","keyed","newKeyed","recycleNode","nodeType","nodeName","prototype","map","call","patch","vdom","parentNode","render","target","oldTarget","querySelector","msg","console","error","run","program","send","message","isRunning","updateView","update","state","init","subscriptions","isFirstRun","getState","view","subs","done","hasOwnProperty","createUnion","types","variants","create","idx","data","match","tag","context","dir","union","batchEffects","effects","effect","Fragment"],"mappings":"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"}