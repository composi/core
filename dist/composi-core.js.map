{"version":3,"file":"composi-core.js.map","sources":["../src/vnode.js","../src/vdom.js","../src/union.js","../src/constants.js","../src/effects.js","../src/h.js","../src/render.js","../src/runtime.js","../src/fragment.js"],"sourcesContent":["import {EMPTY_OBJECT, EMPTY_ARRAY, TEXT_NODE} from './constants'\nimport * as Composi from './types' // eslint-disable-line no-unused-vars\n\n/**\n * Create a virtual node with the provided properties.\n * @param {string | Function} type\n * @param {Composi.Props} props\n * @param {Composi.Children} children\n * @param {Element} node\n * @param {string | number | null} key\n * @param {number | null} [flag]\n * @return {Composi.VNode} VNode\n */\nexport function createVNode(\n  type,\n  props,\n  children,\n  node,\n  key = null,\n  flag = null\n) {\n  return {\n    type,\n    props,\n    children,\n    node,\n    flag,\n    key\n  }\n}\n\n/**\n * Create a virtual text node.\n * @param {string} value\n * @param {Element} [node]\n * @return {Composi.VNode} VNode\n */\nexport function createTextVNode(value, node) {\n  return createVNode(value, EMPTY_OBJECT, EMPTY_ARRAY, node, null, TEXT_NODE)\n}\n","import { RECYCLED_NODE, TEXT_NODE, EMPTY_OBJECT, LIFECYCLE } from './constants'\nimport { createTextVNode, createVNode } from './vnode'\n\n/**\n * Determin whether the old and new props are identical.\n * @typedef {import('./types').Props} Props\n * @param {Props} oldVProps\n * @param {Props} newVProps\n */\nconst areNotEqual = (oldVProps, newVProps) => (JSON.stringify(oldVProps) !== JSON.stringify(newVProps))\n\n/**\n * @typedef {import('./types').VNode} VNode\n */\n/**\n * Return the combination of two objects of props.\n * @param {Object<string, any>} a\n * @param {Object<string, any>} b\n */\nexport const mergeObjects = (a, b) => Object.assign({}, a, b)\n\n/**\n * Handle inline events.\n * @param {Event} event\n */\nfunction listener(event) {\n  this.handlers[event.type](event)\n}\n/**\n * Update the properties and attributes of a VNode based on new data.\n * @param {Element} node\n * @param {string} prop\n * @param {any} oldValue\n * @param {any} newValue\n * @param {boolean} isSVG\n * @return {void} undefined\n */\nfunction patchProperty(node, prop, oldValue, newValue, isSVG) {\n  if (prop === 'key') {\n  } else if (prop === 'style' && typeof newValue === 'object') {\n    for (const i in mergeObjects(oldValue, newValue)) {\n      const style = newValue == null || newValue[i] == null ? '' : newValue[i]\n      i[0] === '-'\n        ? node[prop].setProperty(i, style)\n        : node[prop][i] = style\n    }\n  } else if (prop[0] === 'o' && prop[1] === 'n') {\n    !((node['handlers'] || (node['handlers'] = {}))[(prop = prop.slice(2))] = newValue)\n      ? node.removeEventListener(prop, listener)\n      : null;\n    (!oldValue)\n      ? node.addEventListener(prop, listener)\n      : null\n  } else if (\n    prop !== 'list' &&\n    prop !== 'form' &&\n    prop !== 'type' &&\n    prop !== 'draggable' &&\n    prop !== 'spellcheck' &&\n    prop in node &&\n    !isSVG\n  ) {\n    node[prop] = newValue == null ? '' : newValue\n  } else if (newValue == null || newValue === false) {\n    node.removeAttribute(prop)\n  } else {\n    node.setAttribute(prop, newValue)\n  }\n}\n\n/**\n * Create node from vnode.\n * @param {VNode} vnode\n * @param {Function[]} LIFECYCLE\n * @param {boolean} isSVG\n */\nfunction createNode(vnode, LIFECYCLE, isSVG) {\n  const type = String(vnode.type)\n  const node =\n    vnode.flag === TEXT_NODE\n      ? document.createTextNode(type)\n      : (isSVG = isSVG || type === 'svg') // eslint-disable-line no-cond-assign\n      ? document.createElementNS('http://www.w3.org/2000/svg', type)\n      : document.createElement(type)\n  const {props} = vnode\n  if (props['onmount']) {\n    LIFECYCLE.push(() => props['onmount'](node))\n  }\n\n  for (const k in props) {\n    patchProperty(/** @type {Element} */ (node), k, null, props[k], isSVG)\n  }\n\n  for (let i = 0, len = vnode.children.length; i < len; i++) {\n    node.appendChild(createNode(vnode.children[i], LIFECYCLE, isSVG))\n  }\n\n  return (vnode.node = /** @type{Element} */ (node))\n}\n\n/**\n * Get key of vnode element.\n * @param {VNode} vnode\n * @returns {null | string | number} null | string | number\n */\nconst getKey = vnode => vnode == null ? null : vnode.key\n\n/**\n * Remove child node.\n * @param {VNode} vnode\n * @returns {Node} node\n */\nfunction removeChildren(vnode) {\n  for (let i = 0, {length} = vnode.children; i < length; i++) {\n    removeChildren(vnode.children[i])\n  }\n\n  const cb = vnode.props['ondestroy']\n  cb != null && cb(vnode.node)\n\n  return vnode.node\n}\n\n/**\n * Remove element from DOM.\n * @param {Node} parent\n * @param {VNode} vnode\n * @returns {void} undefined\n */\nfunction removeElement(parent, vnode) {\n  const remove = function() {\n    parent.removeChild(removeChildren(vnode))\n  }\n\n  const cb = vnode.props && vnode.props['onunmount']\n  cb != null\n    ? cb(vnode.node, remove)\n    : remove()\n}\n\n/**\n * Patch element in DOM according to new props.\n * @param {Node} parent\n * @param {Node} node\n * @param {any} oldVNode\n * @param {any} newVNode\n * @param {boolean} [isSVG]\n */\nfunction patchNode(parent, node, oldVNode, newVNode, isSVG) {\n  if (oldVNode === newVNode) {\n  } else if (\n    oldVNode != null\n      && oldVNode.flag === TEXT_NODE\n      && newVNode.flag === TEXT_NODE\n  ) {\n    if (oldVNode.type !== newVNode.type) {\n      node.nodeValue = newVNode.type\n    }\n  } else if (oldVNode == null || oldVNode.type !== newVNode.type) {\n    node = parent.insertBefore(createNode(newVNode, LIFECYCLE, isSVG), node)\n    if (oldVNode != null) {\n      removeElement(parent, oldVNode)\n    }\n  } else {\n    let tmpVKid\n    let oldVKid\n\n    let oldKey\n    let newKey\n\n    const oldVProps = oldVNode.props\n    const newVProps = newVNode.props\n\n    const oldVKids = oldVNode.children\n    const newVKids = newVNode.children\n\n    let oldHead = 0\n    let newHead = 0\n    let oldTail = oldVKids.length - 1\n    let newTail = newVKids.length - 1\n\n    isSVG = isSVG || newVNode.type === 'svg'\n\n    for (const i in mergeObjects(oldVProps, newVProps)) {\n      (\n        (i === 'value' || i === 'selected' || i === 'checked'\n          ? node[i]\n          : oldVProps[i]) !== newVProps[i]\n      )\n        && (() => {\n          patchProperty(\n          /** @type{Element} */(node),\n            i,\n            oldVProps[i],\n            newVProps[i],\n            isSVG\n          )\n          const cb = newVProps.onupdate\n          cb != null\n            && (areNotEqual(oldVProps, newVProps))\n            && LIFECYCLE.push( () => cb(node, oldVProps, newVProps))\n        })()\n    }\n\n    while (newHead <= newTail && oldHead <= oldTail) {\n      if (\n        (oldKey = getKey(oldVKids[oldHead])) == null ||\n        oldKey !== getKey(newVKids[newHead])\n      ) {\n        break\n      }\n\n      patchNode(\n        node,\n        oldVKids[oldHead].node,\n        oldVKids[oldHead++],\n        newVKids[newHead++],\n        isSVG\n      )\n    }\n\n    while (newHead <= newTail && oldHead <= oldTail) {\n      if (\n        (oldKey = getKey(oldVKids[oldTail])) == null ||\n        oldKey !== getKey(newVKids[newTail])\n      ) {\n        break\n      }\n\n      patchNode(\n        node,\n        oldVKids[oldTail].node,\n        oldVKids[oldTail--],\n        newVKids[newTail--],\n        isSVG\n      )\n    }\n\n    if (oldHead > oldTail) {\n      while (newHead <= newTail) {\n        node.insertBefore(\n          createNode(newVKids[newHead++], LIFECYCLE, isSVG),\n          (oldVKid = oldVKids[oldHead]) && oldVKid.node\n        )\n      }\n    } else if (newHead > newTail) {\n      while (oldHead <= oldTail) {\n        removeElement(node, oldVKids[oldHead++])\n      }\n    } else {\n      let i\n      let keyed\n      let newKeyed\n      for (i = oldHead, keyed = {}, newKeyed = {}; i <= oldTail; i++) {\n        if ((oldKey = oldVKids[i].key) != null) {\n          keyed[oldKey] = oldVKids[i]\n        }\n      }\n\n      while (newHead <= newTail) {\n        oldKey = getKey((oldVKid = oldVKids[oldHead]))\n        newKey = getKey(newVKids[newHead])\n\n        if (\n          newKeyed[oldKey] ||\n          (newKey != null && newKey === getKey(oldVKids[oldHead + 1]))\n        ) {\n          if (oldKey == null) {\n            removeElement(node, oldVKid)\n          }\n          oldHead++\n          continue\n        }\n\n        if (newKey == null || oldVNode.flag === RECYCLED_NODE) {\n          if (oldKey == null) {\n            patchNode(\n              node,\n              oldVKid && oldVKid.node,\n              oldVKid,\n              newVKids[newHead],\n              isSVG\n            )\n            newHead++\n          }\n          oldHead++\n        } else {\n          if (oldKey === newKey) {\n            patchNode(node, oldVKid.node, oldVKid, newVKids[newHead], isSVG)\n            newKeyed[newKey] = true\n            oldHead++\n          } else {\n            if ((tmpVKid = keyed[newKey]) != null) {\n              patchNode(\n                node,\n                node.insertBefore(tmpVKid.node, oldVKid && oldVKid.node),\n                tmpVKid,\n                newVKids[newHead],\n                isSVG\n              )\n              newKeyed[newKey] = true\n            } else {\n              patchNode(\n                node,\n                oldVKid && oldVKid.node,\n                null,\n                newVKids[newHead],\n                isSVG\n              )\n            }\n          }\n          newHead++\n        }\n      }\n\n      while (oldHead <= oldTail) {\n        (getKey((oldVKid = oldVKids[oldHead++])) == null)\n          && removeElement(node, oldVKid)\n      }\n\n      for (const i in keyed) {\n        (newKeyed[i] == null)\n          && removeElement(node, keyed[i])\n      }\n    }\n  }\n\n  return (newVNode.node = node)\n}\n\nfunction recycleNode(node) {\n  return node.nodeType === TEXT_NODE\n    ? createTextVNode(node.nodeValue, node)\n    : createVNode(\n        node.nodeName.toLowerCase(),\n        EMPTY_OBJECT,\n        Array.prototype.map.call(node.childNodes, recycleNode),\n        node,\n        null,\n        RECYCLED_NODE\n      )\n}\n\n/**\n * Patch DOM with virtual node from functional component.\n * @param {Node} node\n * @param {VNode} vdom\n */\nexport function patch(node, vdom) {\n  if (!node['vdom']) {\n    if (vdom.props['onmount']) {\n      LIFECYCLE.push(() => vdom.props['onmount'](node))\n    }\n  }\n  const vnode = (patchNode(\n    node.parentNode,\n    node,\n    node['vdom'] || recycleNode(node),\n    vdom\n  )['vdom'] = vdom)\n  while (LIFECYCLE.length > 0) LIFECYCLE.pop()()\n  return vnode\n}\n","/**\n * Helper function for testing whether message type exists on actions object.\n */\nconst {hasOwnProperty} = Object\n\n\n/**\n * @param {import('./types').Tag} tag\n * @param {Object<string, Function>} handlers\n * @param {() => void} [catchAll]\n */\nfunction match(tag, handlers, catchAll) {\n  const {type, data} = tag\n  return type\n    ? (type => {\n      const match = hasOwnProperty.call(handlers, type) && handlers[type]\n      return match\n        ? match(data)\n        : catchAll\n        ? catchAll()\n        : console.error(\n          `The message you sent has no matching action method. Check the spelling for the message or the action method. The message type was \"${type}\".`\n        )\n    })(type)\n    : (() => {\n      console.error(\n        \"The message you provided was not valid. Messages have the format: {type: 'whatever', data?: 'something'}\"\n      )\n      console.error('The tag you provided was:')\n      console.dir(tag)\n    })()\n}\n\n/**\n * Create a union of string tags.\n * @param {string[]} types\n * @returns {Object<string, any>} Object\n */\nfunction createUnion(types) {\n  const variants = Object.create(null)\n\n  let idx = 0\n  while (idx < types.length) {\n    const type = types[idx]\n    type === 'match'\n      && console.error(\n        `The message type you provided was \"match\". This cannot be used since it would override the message union's own match method. Please change it to something else, such as \"matchName\", etc.`\n      )\n\n    variants[type] = data => ({ type, data })\n    idx++\n  }\n\n  return { variants, match }\n}\n\n/**\n * @typedef {Object} MessageUnion\n */\n\n/**\n * Create a union of types for matching up with functions. This is used to define actions for the `update` method of a runtime program.\n * @param {...string} types\n * @returns {MessageUnion} MessageUnion\n */\nexport function union(...types) {\n  const { variants, match } = createUnion(types)\n  variants.match = match\n  return variants\n}\n","/**\n * Used to determine if a vnode should be recycled.\n * @type {number}\n */\nexport const RECYCLED_NODE = 0\n\n/**\n * Used in a vnode to indicate that it is a DOM node.\n * @type {number}\n */\nexport const ELEMENT_NODE = 1\n\n/**\n * Used in a vnode to indicate that it is a text node.\n * @type {number}\n */\nexport const TEXT_NODE = 3\n\n/**\n * Namespace for SVG elements with `xlink:href` attributes.\n * @type {string}\n */\nexport const XLINK_NS = 'http://www.w3.org/1999/xlink'\n\n/**\n * Namespace for SVG elements.\n * @type {string}\n */\nexport const SVG_NS = 'http://www.w3.org/2000/svg'\n\n/**\n * An empty object. Used as placeholder for `props` in VNode.\n * @type {{}} EMPTY_OBJECT\n */\nexport const EMPTY_OBJECT = {}\n\n/**\n * An empty array. Used for access to array methods.\n * @type {any[]} EMPTY_ARRAY\n */\nexport const EMPTY_ARRAY = []\n\n/**\n * An array to store lifecycle hooks.\n * @type {any[]} LIFECYCLE\n */\nexport const LIFECYCLE = []\n","/**\n * @typedef {import('./types').Send} Send\n * @typedef {import('./types').Message} Message\n * @typedef {import('./types').State} State\n * @typedef {() => State} GetState\n * @typedef {(send?: Send, getState?: GetState) => any} Effect\n */\n/**\n * Function to batch effects together.\n * @param {...Effect} effects\n * @return {(send?: Send, getState?: GetState) => void} Function\n */\nexport const batchEffects = (...effects) => (getState, send) =>\n  effects.map(effect => effect && effect(getState, send))\n\nexport const batch = batchEffects\n","import { createVNode, createTextVNode } from './vnode'\n\n/**\n * Creates a virtual node representing an element node or text node to be created. This function must be imported into any file that contains JSX. Babel uses this function to convert JSX into JavaScript.\n * @typedef {import('./types').VNode} VNode\n * @param {string | Function} type\n * @param {Object.<string, any>} [props]\n * @return {VNode}\n */\nexport function h(type, props, ...children) {\n  props = props || {}\n  let node\n  const tempBox = []\n  const childNodes = []\n  let {length} = children\n  const {key} = props\n\n  while (length-- > 0) tempBox.push(children[length])\n\n  props.children\n    ? (tempBox.length <= 0)\n    : tempBox.push(props.children)\n  props.children && delete props.children\n\n  while (tempBox.length > 0) {\n    if (Array.isArray((node = tempBox.pop()))) {\n      let {length} = node\n      while (length-- > 0) {\n        tempBox.push(node[length])\n      }\n    } else if (node === false || node === true || node == null) {\n    } else {\n      childNodes.push(typeof node === 'object' ? node : createTextVNode(node))\n    }\n  }\n\n  return (typeof type === 'function')\n    ? type(props, childNodes)\n    : createVNode(type, props, childNodes, null, key)\n}\n","import { patch } from './vdom'\n\n/**\n * Render a functional component. The first argument is the component to render. This can be either a JSX tag or an `h` function. The second argument is the element to hydrate or update. During the first render, the target element is hydrated with the component provided. Further updates patch the existing element based on the virtual DOM.\n * @example\n *\n * ```\n * // Render Title tag into section:\n * render(<Title message='Hello World!'/>, 'section')\n * // Update the title component 5 seconds later:\n * setTimeout(() => {\n *   render(<Title message='Hello Everyone!'/>, 'section')\n * }, 5000)\n * ```\n * @typedef {import('./types').VNode} VNode\n * @param {VNode} vnode\n * @param {Element | string} target\n * @return {void} undefined\n */\nexport function render(vnode, target) {\n  if (Array.isArray(vnode)) {\n    throw 'Cannot insert Fragment tag directly into DOM.'\n  }\n  let oldTarget = ''\n  if (typeof target === 'string') {\n    oldTarget = target\n    target = document.querySelector(target)\n  }\n  if (!target) {\n    let msg = ''\n    if (oldTarget) msg = ` The selector you provided was: \"${oldTarget}\"`\n    console.error(\n      `@composi/core Error: The second parameter for render function was invalid. Check the selector you provided and make sure that it exists in the DOM before trying to render. ${msg}`\n    )\n  }\n  patch(target, vnode)\n}\n","\n/**\n * The @composi/runtime.\n * @example\n *\n * ```\n * // Create a runtime program\n * const program = {\n *   // Define state:\n *   init() {\n *     return [{count: 0}]\n *   },\n *   // Define view to render.\n *   // Notice event to send message 'incr'.\n *   view(state, send) {\n *      return render(<div onclick={send('incr')}>The count is: {state.count}</div>, document.body)\n *   },\n *   // Define action to update state:\n *   update(state, msg) {\n *     if (msg === 'incr') {\n *        return [state.count++]\n *     }\n *   }\n * }\n * // Run the program:\n * run(program)\n * ```\n * @param {import('./types').Program} program A program to run with five methods: `init`, `view`, `update`, `subscriptions` and `done`.\n * @return {() => void} Function to terminate runtime.\n */\nexport function run(program) {\n  const {init, view, update, subs, done} = program\n  const subscriptions = subs || program.subscriptions\n  let state\n  let isRunning = true\n  let isFirstRun = true\n  const getState = () => state\n\n  /**\n   * Send a message.\n   * @param {import('./types').Message} message\n   *\n   */\n  function send(message, data) {\n    let msg = message\n    /**\n     * message is a function from a tagged union that\n     * can be called to return a message object.\n     */\n    isRunning\n     && (typeof message === 'function') \n     && (msg = /** @type {Function} */ (message)(data))\n    \n    return isRunning &&\n      updateView(update(state, msg, send))\n  }\n\n  /**\n   * Expose send as static function on program object.\n   * This is to let you send messages to the program\n   * from other contexts, such as in a @composi/router action.\n   */\n  program['send'] = send\n\n  /**\n   * Handle changes to state and executing effects.\n   * @param {any} update\n   * @return {void} undefined\n   */\n  const updateView = update => {\n    update \n      ? state = update \n      : init \n      ? state = init() \n      : state = undefined\n\n    isFirstRun\n      && subscriptions\n      && typeof subscriptions === 'function'\n      && subscriptions(send, getState)\n\n    isFirstRun = false\n    \n    view(state, send)\n  }\n  updateView(state)\n\n  /**\n   * Function to end runtime.\n   * @return {void} undefined\n   */\n  return () => {\n    isRunning\n      && done\n      && done(state)\n      \n    isRunning = false\n  }\n}\n","/**\n * Returns a group of sibling elements for inclusion in another JSX tag.\n * @typedef {import('./types').VNode} VNode\n * @typedef {import('./types').Props} Props\n * @typedef {import('./types').Children} Children\n * @param {Props} props\n * @return {Children} children\n */\n/**\n * A tag to enable returning sibling elements. This is useful for returning list items to render in a list or table cells to render in a table row.\n * @example\n *\n * ```\n * <Fragment>\n *   <li>A</li>\n *   <li>B</li>\n *   <li>C</li>\n * </Fragment>\n ```\n * Or functionally:\n * ```\n * Fragment(null, [\n *   h('li', {}, 'A'),\n *   h('li', {}, 'B'),\n *   h('li', {}, 'C')\n * ])\n ```\n * @param {Object} [props] When using Fragment as a function, props is the first argument. Provide either null or {} as the value for props.\n * @param {Children} [children] The siblings to return with the Fragment. This will be an array of sibling elements.\n * @return {VNode[]} An array of virtual nodes.\n */\nexport const Fragment = (props, children) =>\n  Array.isArray(props) && !children ? props : children\n"],"names":["createVNode","type","props","children","node","key","flag","createTextVNode","value","EMPTY_OBJECT","EMPTY_ARRAY","TEXT_NODE","listener","event","handlers","patchProperty","prop","oldValue","newValue","isSVG","i","mergeObjects","style","setProperty","slice","removeEventListener","addEventListener","removeAttribute","setAttribute","createNode","vnode","LIFECYCLE","document","createTextNode","createElementNS","createElement","k","push","len","length","appendChild","removeChildren","cb","removeElement","parent","remove","removeChild","patchNode","oldVNode","newVNode","nodeValue","insertBefore","tmpVKid","oldVKid","oldKey","newKey","oldVProps","newVProps","oldVKids","newVKids","oldHead","newHead","oldTail","newTail","onupdate","areNotEqual","getKey","keyed","newKeyed","RECYCLED_NODE","recycleNode","nodeType","nodeName","toLowerCase","Array","prototype","map","call","childNodes","patch","vdom","parentNode","pop","match","tag","catchAll","data","hasOwnProperty","console","error","dir","createUnion","types","variants","Object","create","idx","JSON","stringify","a","b","assign","batchEffects","effects","getState","send","effect","tempBox","isArray","target","oldTarget","querySelector","msg","program","message","isRunning","updateView","update","state","init","view","subs","done","subscriptions","isFirstRun"],"mappings":"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"}