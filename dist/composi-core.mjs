const a=0,b=3,c={},d=[],e=[];function f(a,b,c,d,e=null,f=null){return{type:a,props:b,children:c,node:d,flag:f,key:e}}function g(a,e){return f(a,c,d,e,null,b)}function i(a,b,...c){b=b||{};let d;const e=[],h=[];let{length:i}=c;const{key:j}=b;for(;0<i--;)e.push(c[i]);for(b.children?0>=e.length:e.push(b.children),b.children&&delete b.children;0<e.length;)if(Array.isArray(d=e.pop())){let{length:a}=d;for(;0<a--;)e.push(d[a])}else if(!1===d||!0===d||null==d);else h.push("object"==typeof d?d:g(d));return"function"==typeof a?a(b,h):f(a,b,h,null,j)}const h=(a,b)=>JSON.stringify(a)!==JSON.stringify(b),j=(c,a)=>Object.assign({},c,a);function k(a){this.handlers[a.type](a)}function l(a,b,c,d,e){if("key"===b);else if("style"===b&&"object"==typeof d)for(const e in j(c,d)){const c=null==d||null==d[e]?"":d[e];"-"===e[0]?a[b].setProperty(e,c):a[b][e]=c}else"o"===b[0]&&"n"===b[1]?(((a.handlers||(a.handlers={}))[b=b.slice(2)]=d)?null:a.removeEventListener(b,k),c?null:a.addEventListener(b,k)):"list"!==b&&"form"!==b&&"type"!==b&&"draggable"!==b&&"spellcheck"!==b&&b in a&&!e?a[b]=null==d?"":d:null==d||!1===d?a.removeAttribute(b):a.setAttribute(b,d)}function m(a,c,d){const e=a.type+"",f=a.flag===b?document.createTextNode(e):(d=d||"svg"===e)?document.createElementNS("http://www.w3.org/2000/svg",e):document.createElement(e),{props:g}=a;for(const b in g.onmount&&c.push(()=>g.onmount(f)),g)l(f,b,null,g[b],d);for(let b=0,e=a.children.length;b<e;b++)f.appendChild(m(a.children[b],c,d));return a.node=f}const n=a=>null==a?null:a.key;function o(a){for(let b=0,{length:c}=a.children;b<c;b++)o(a.children[b]);const b=a.props.ondestroy;return null!=b&&b(a.node),a.node}function p(a,b){const c=function(){a.removeChild(o(b))},d=b.props&&b.props.onunmount;null==d?c():d(b.node,c)}function q(c,d,f,g,k){if(f===g);else if(null!=f&&f.flag===b&&g.flag===b)f.type!==g.type&&(d.nodeValue=g.type);else if(null==f||f.type!==g.type)d=c.insertBefore(m(g,e,k),d),null!=f&&p(c,f);else{let b,c,o,r;const s=f.props,t=g.props,u=f.children,v=g.children;let w=0,x=0,y=u.length-1,z=v.length-1;for(const a in k=k||"svg"===g.type,j(s,t))("value"==a||"selected"==a||"checked"==a?d[a]:s[a])!==t[a]&&(()=>{l(d,a,s[a],t[a],k);const b=t.onupdate;null!=b&&h(s,t)&&e.push(()=>b(d,s,t))})();for(;x<=z&&w<=y&&null!=(o=n(u[w]))&&o===n(v[x]);)q(d,u[w].node,u[w++],v[x++],k);for(;x<=z&&w<=y&&null!=(o=n(u[y]))&&o===n(v[z]);)q(d,u[y].node,u[y--],v[z--],k);if(w>y)for(;x<=z;)d.insertBefore(m(v[x++],e,k),(c=u[w])&&c.node);else if(x>z)for(;w<=y;)p(d,u[w++]);else{let e,g,h;for(e=w,g={},h={};e<=y;e++)null!=(o=u[e].key)&&(g[o]=u[e]);for(;x<=z;){if(o=n(c=u[w]),r=n(v[x]),h[o]||null!=r&&r===n(u[w+1])){null==o&&p(d,c),w++;continue}null==r||f.flag===a?(null==o&&(q(d,c&&c.node,c,v[x],k),x++),w++):(o===r?(q(d,c.node,c,v[x],k),h[r]=!0,w++):null==(b=g[r])?q(d,c&&c.node,null,v[x],k):(q(d,d.insertBefore(b.node,c&&c.node),b,v[x],k),h[r]=!0),x++)}for(;w<=y;)null==n(c=u[w++])&&p(d,c);for(const a in g)null==h[a]&&p(d,g[a])}}return g.node=d}function r(d){return d.nodeType===b?g(d.nodeValue,d):f(d.nodeName.toLowerCase(),c,Array.prototype.map.call(d.childNodes,r),d,null,a)}function s(a,b){!a.vdom&&b.props.onmount&&e.push(()=>b.props.onmount(a));const c=q(a.parentNode,a,a.vdom||r(a),b).vdom=b;for(;0<e.length;)e.pop()();return c}function t(a,b){if(Array.isArray(a))throw"Cannot insert Fragment tag directly into DOM.";let c="";if("string"==typeof b&&(c=b,b=document.querySelector(b)),!b){let a="";c&&(a=` The selector you provided was: "${c}"`),console.error(`@composi/core Error: The second parameter for render function was invalid. Check the selector you provided and make sure that it exists in the DOM before trying to render. ${a}`)}s(b,a)}function u(a){function b(a,c){let d=a;return j&&"function"==typeof a&&(d=a(c)),j&&m(e(i,d,b))}const{init:c,view:d,update:e,subs:f,done:g}=a,h=f||a.subscriptions;let i,j=!0,k=!0;const l=()=>i;a.send=b;const m=a=>{a&&(i=a)||c&&(i=c())||(i=void 0),k&&h&&"function"==typeof h&&h(b,l),k=!1,d(i,b)};return m(i),()=>{j&&g&&g(i),j=!1}}const{hasOwnProperty:v}=Object;function w(a,b,c){const{type:d,data:e}=a;return d?(a=>{const d=v.call(b,a)&&b[a];return d?d(e):c?c():console.error(`The message you sent has no matching action method. Check the spelling for the message or the action method. The message type was "${a}".`)})(d):(()=>{console.error("The message you provided was not valid. Messages have the format: {type: 'whatever', data?: 'something'}"),console.error("The tag you provided was:"),console.dir(a)})()}function x(a){const b=Object.create(null);for(let c=0;c<a.length;){const d=a[c];"match"===d&&console.error(`The message type you provided was "match". This cannot be used since it would override the message union's own match method. Please change it to something else, such as "matchName", etc.`),b[d]=a=>({type:d,data:a}),c++}return{variants:b,match:w}}function y(...a){const{variants:b,match:c}=x(a);return b.match=c,b}const z=(...a)=>(b,c)=>a.map(a=>a&&a(b,c)),A=z,B=(a,b)=>Array.isArray(a)&&!b?a:b;export{i as h,t as render,u as run,y as union,z as batchEffects,A as batch,B as Fragment};
//# sourceMappingURL=composi-core.mjs.map
